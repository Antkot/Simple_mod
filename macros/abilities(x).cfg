# all forest terrains (tree, mushroom) and farmland
#define VEGETATED_TERRAINS
*^F*, *^Uf*, *^Gvs #enddef

#define SPECIAL_NOTES_VEGETATED_TERRAINS
    _ " Vegetated terrains are forest, great tree, farmland and mushroom grove hexes."#enddef


#define __TSTRING_NOTES
    _ "

Notes: "#enddef

#define ABILITY_WATERAMBUSH
    [hides]
        id=waterambush
        name= _ "water ambush"
        name_inactive= _ "water ambush"
        description= _ "This unit can hide in water, and remain undetected by its enemies. Enemy units cannot see this unit while it is in water, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        description_inactive= _ "This unit can hide in water, and remain undetected by its enemies. Enemy units cannot see this unit while it is in water, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=W*,Sm*,Ss*,W^*,Sm^*,Ss^*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define ABILITY_MOUNTAINAMBUSH
    [hides]
        id=mountainambush
        name= _ "mountain ambush"
        name_inactive= _ " mountain ambush"
        description= _ "This unit can hide in mountains and hills, and remain undetected by its enemies. Enemy units cannot see this unit while it is in mountains or hills, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        description_inactive= _ "This unit can hide in mountains and hills, and remain undetected by its enemies. Enemy units cannot see this unit while it is in mountains or hills, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=Hd*,Hh*,Ha*,Mm*,Md*,Ms*,Uh*,Hd^*,Hh^*,Ha^*,Mm^*,Md^*,Ms^*,Uh^*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define ON_DEATH_BECOME NAME DESCRIPTION UNIT_TYPE UNIT_BECOME
[dummy]
	name= _ "{NAME}"
	description= _ "{DESCRIPTION}"
[/dummy]
[/abilities]
   [event]
	name=last breath

	[filter]
	    type={UNIT_TYPE}
	[/filter]
	
	{STORE_UNIT_VAR x,y=$x1,$y1 side dead_side}

	[kill]
	   x,y=$x1,$y1
	[/kill]

	{GENERIC_UNIT $dead_side {UNIT_BECOME} $x1 $y1}
   [/event]
[+abilities]

#enddef

#define ABILITY_BLOODLUST TYPE
[dummy]
	id=ROLbloodlust
	name= _ "bloodlust"
	description= _ "If a unit with Bloodlust kills its first target, it can then attack another nearby unit."
[/dummy]
[/abilities]
	[event]
		name=die
		first_time_only=no

		[filter_second]
			type={TYPE} 
		[/filter_second]

		{MODIFY_UNIT x,y=$x2,$y2 moves 0}
		{MODIFY_UNIT x,y=$x2,$y2 attacks_left 1}
	[/event]
[+abilities]
#enddef

#define ABILITY_RECOVERY
   [regenerate]
      value=4
      id=recovery
      name= _ "recovery"
      female_name= _ "female^recovery"
      description= _ "The unit will heal itself 4 HP per turn. If it is poisoned, it will remove the poison instead of healing."
      affect_self=yes
      poison=cured
   [/regenerate]
#enddef

#define ABILITY_SWAMP_PROWL
    [hides]
        id=swamp_prowl
        name= _ "swamp prowl"
        name_inactive= _ "swamp prowl"
        description= _ "This unit can hide in swamps, and remain undetected by its enemies.

Enemy units cannot see this unit while it is in a swamp hex, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        description_inactive= _ "This unit can hide in swamps, and remain undetected by its enemies.

Enemy units cannot see this unit while it is in a swamp hex, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=Chs,Khs,Ss,Ss^Vhs,Ss^Vm
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define ABILITY_TWILIGHTSTALK    
   [hides]        
	id=ROLtwilightstalk        
	name= _ "twilightstalk"        
	female_name= _ "twilightstalk"               
	description= _ "The unit becomes invisible during dawn and dusk, hiding in long shadows created by the sun near the horizont.
	Enemy units cannot see this unit during dawn or dusk, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."        
	description_inactive= _ "The unit becomes invisible during dawn and dusk, hiding in long shadows created by the sun near the horizont.
	Enemy units cannot see this unit during dawn or dusk, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."        
	affect_self=yes        
	[filter_self]            
	   [filter_location]                
		time_of_day=neutral            
	   [/filter_location]        
	[/filter_self]    
   [/hides]
#enddef

#define SPECIAL_NOTES_TWILIGHTSTALK
_ " This unit becomes invisible during dawn and dusk, hiding in long shadows created by the sun near the horizont."#enddef


#define SPECIAL_NOTES_EARTH_RECUPERATION
    _ " This unit will repair its body with the rocks found while in/on hills, caves, or mountains, thus recovering 5 HP in the process. The effects of poison will not be prolonged or cured." #enddef

#define ABILITY_EARTH_RECUPERATION
    [regenerate]
        [filter_self]
            [filter_location]
                terrain=Mm*,Md*,Hh*,Hhd*,Uh*,Uu*
            [/filter_location]
        [/filter_self]
        value=5
        id=healing
        name= _ "earth recuperation"
        description= _ "This unit will repair its body with the rocks found while in/on hills, caves, or mountains, thus recovering 5 HP in the process."
        name_inactive= _ "earth recuperation"
        description_inactive= _ "This unit will repair its body with the rocks found while in/on hills, caves, or mountains, thus recovering 5 HP in the process."
        affect_self=yes
    [/regenerate]
#enddef

#define SPECIAL_NOTES_OBSCURE
    _ " This unit darkens the surrounding area, making chaotic units fight better, and lawful units fight worse." #enddef

#define ABILITY_OBSCURE
    # Canned definition of the Obscures ability to be included in an
    # [abilities] clause.
    [illuminates]
        id=obscure
        value=-25
        min_value=-25
        cumulative=no
        name= _ "obscures"
        female_name= _ "female^obscures"
        description= _ "This unit darkens the surrounding area, making chaotic units fight better, and lawful units fight worse.

Any units adjacent to this unit will fight as if it were dusk when it is day, and as if it were night when it is dusk."
        affect_self=yes
    [/illuminates]
#enddef

#define SPECIAL_NOTES_AQUATIC_BODY
    _ " This unit will recover 5 HP per turn when on watery terrain. The effects of poison will not be prolonged or cured." #enddef

#define ABILITY_AQUATIC_BODY
    [regenerate]
        [filter_self]
            [filter_location]
                terrain=W*,S*,Chw*,Khw*
            [/filter_location]
        [/filter_self]
        value=5
        id=healing
        name= _ "aquatic body"
        description= _ "This unit will regenerate 5 HP when in deep or shallow water."
        name_inactive= _ "aquatic body"
        description_inactive= _ "This unit will regenerate 5 HP when in deep or shallow water."
        affect_self=yes
    [/regenerate]
#enddef

#define SPECIAL_NOTES_SYLVAN_REVITALISATION
    _ " This unit will recover 5 HP per turn while in a forest. The effects of poison will not be prolonged or cured." #enddef


#define ABILITY_SYLVAN_REVITALISATION
    [regenerate]
        [filter_self]
            [filter_location]
                terrain={VEGETATED_TERRAINS}
            [/filter_location]
        [/filter_self]
        value=5
        id=healing
        name= _ "sylvan revitalisation"
        description= _ "This unit will regenerate 5 HP while in a vegetated area."
        name_inactive= _ "sylvan revitalisation"
        description_inactive= _ "This unit will regenerate 5 HP while in a vegetated area."
        affect_self=yes
    [/regenerate]
#enddef

#define SPECIAL_NOTES_SYLVAN_SPARK
    _ " This unit will regenerate 5 HP per turn in forest or mushroom grove terrains." #enddef


#define __ABILITY_TSTRING_SYLVAN_SPARK_NAME
    _ "sylvan spark"
#enddef
#define __ABILITY_TSTRING_SYLVAN_SPARK_DESC
    description= _ "While in vegetated terrains, the unit will heal itself 5 hp per turn. If it is poisoned, it will remove the poison instead of healing."+{__TSTRING_NOTES}+{SPECIAL_NOTES_VEGETATED_TERRAINS}
#enddef

#define ABILITY_SYLVAN_SPARK
    [regenerate]
        value=5
        id=sylvan_spark
        name={__ABILITY_TSTRING_SYLVAN_SPARK_NAME}
        description={__ABILITY_TSTRING_SYLVAN_SPARK_DESC}
        name_inactive={__ABILITY_TSTRING_SYLVAN_SPARK_NAME}
        description_inactive={__ABILITY_TSTRING_SYLVAN_SPARK_DESC}
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain={VEGETATED_TERRAINS}
            [/filter_location]
        [/filter_self]
        poison=cured
    [/regenerate]
#enddef

#define SPECIAL_NOTES_SYLVAN_ESSENCE
    _ " This unit's powers are increased by the Sylvan Essence (see this ability's <ref>dst='ability_sylvan essence' text='full description'</ref> for details)." #enddef

#define ABILITY_SYLVAN_ESSENCE_NOUNION
    [heals]
        value=8
        id=sylvan_essence_healing_nounion
        name= _ "sylvan essence"
        description= _ "This unit can heal and cure friendly units on adjacent hexes every turn, to a base maximum of 8 HP. In vegetated terrains, it will conceal itself from its enemies. It can also regenerate (but not unpoison) 3 HP per-turn, but only in vegetated terrains."+{__TSTRING_NOTES}+{SPECIAL_NOTES_VEGETATED_TERRAINS}
        affect_allies=yes
        affect_self=no
        poison=cured
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/heals]
    [hides]
        id=sylvan_essence_conceal_nounion
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain={VEGETATED_TERRAINS}
            [/filter_location]
        [/filter_self]
    [/hides]
    [regenerate]
        value=3
        id=sylvan_essence_selfheal_nounion
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain={VEGETATED_TERRAINS}
            [/filter_location]
        [/filter_self]
    [/regenerate]
#enddef

#define EOMA_SPECIAL_NOTES_FIRE
_" This unit regenerates in the presence of lava."#enddef

#define EOMA_SPECIAL_NOTES_WATER
_" This unit regenerates in the presence of water."#enddef

#define ABILITY_WATER
    [regenerate]
        value=6
        id=water
        name= _ "made of water"
        description= _ "This unit is made of water. As a result, if it is standing in water, it will receive 6 hp. If it is poisoned it will cure the poison instead of regenerating."
        name_inactive= _ "made of water"
        description_inactive= _ "This unit is made of water. As a result, if it is standing in water, it will receive 6 hp. If it is poisoned it will cure the poison instead of regenerating."
        affect_self=yes
        poison=cured
        [filter_self]
            [filter_location]
                terrain=Wo,Ww,Ss
            [/filter_location]
        [/filter_self]
    [/regenerate]
#enddef

#define ABILITY_FIRE
    [regenerate]
        value=6
        id=fire
        name= _ "made of fire"
        description=  _ "This unit is made of fire. If it stands in lava, it will receive 6 hp"
        name_inactive= _ "made of fire"
        description_inactive= _ "This unit is made of fire. If it stands in lava, it will receive 6 hp."
        affect_self=yes
        poison=cured
        [filter_self]
            [filter_location]
                terrain=Ql,Qlf
            [/filter_location]
        [/filter_self]
    [/regenerate]
#enddef

#define SPECIAL_NOTES_HEAT_ABSORPTION
    _ " This unit will recover 5 HP per turn when on lava, sandy or desert terrain. The effects of poison will not be prolonged or cured." #enddef


#define ABILITY_HEAT_ABSORPTION
    [regenerate]
        [filter_self]
            [filter_location]
                terrain=Ql*,Ql*^*,Mv*,D*,Hd,D*^*
            [/filter_location]
        [/filter_self]
        value=5
        id=healing
        name= _ "heat absorption"
        description= _ "This unit will absorb heat whenever it is on or floating above lava, thus recovering 5 HP. In addition, this unit will absorb heat from other warm terrain like sand."
        affect_self=yes
    [/regenerate]
#enddef

#################################

#define SPECIAL_NOTES_POISONING
    _"When this unit dies all enemy units around it will become poisoned."#enddef

#define ABILITY_POISONING
   [dummy]
      id=poisoning
      name= _ "poisoning"
      description= _ "When this unit is destroyed, a toxic gas is unleashed, poisonning all surrounding living units in the process. Non-living units are immune."
   [/dummy]

[/abilities]
[event]
   name=die
   first_time_only=no

    [filter]
        ability=poisoning
    [/filter]

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x1,$y1
            [/filter_adjacent]
        [not]
            [filter_wml]
                [status]
                    not_living="yes"
                [/status]
            [/filter_wml]
        [/not]
	[and]
	   [not]
	      side=$unit.side
	   [/not]
	[/and]
        [/filter]
       
        variable=units
   	kill=no
    [/store_unit]

    {FOREACH units i}
      [set_variable]
         name=units[$i].status.poisoned
         value=yes
      [/set_variable]
      [unstore_unit]
          variable=units[$i]
          find_vacant=no
          text= _ "poisoned"
          {COLOR_HARM}
      [/unstore_unit]

    {NEXT i}
    {CLEAR_VARIABLE units}

           [kill]
                x,y=$x1,$y1
           [/kill]   

[/event]
[+abilities]

#enddef

#################################


#define SPECIAL_NOTES_INSPIRE
_" The presence of this unit inspires own units next to it to deal more damage in combat, though this only applies to units of lower or equal level."#enddef

#define ABILITY_INSPIRE_LEVEL_1
    # Canned definition of the Inspire (level 1) ability to be included in an
    # [abilities] clause.
    [leadership]
        id=inspire_0
        value=20
        cumulative=no
        name= _ "inspire"
        description= _ "This unit can inspire own L0 or L1 units that are next to it, making them fight better. Adjacent own units of L1 will do 10% more damage; L0 units will do 20% more."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_1
        value=10
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_INSPIRE_LEVEL_2
    # Canned definition of the Inspire (level 2) ability to be included in an
    # [abilities] clause.
    [leadership]
        id=inspire_0
        value=30
        cumulative=no
        name= _ "inspire"
        description= _ "This unit can inspire own L0, L1, or L2 units that are next to it, making them fight better. Adjacent own units of L2 will do more 10% more damage; L1 units will do 20% more, and L0 will do 30% more."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_1
        value=20
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_2
        value=10
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_INSPIRE_LEVEL_3
    # Canned definition of the Inspire (level 3) ability to be included in an
    # [abilities] clause.
    [leadership]
        id=inspire_0
        value=40
        cumulative=no
        name= _ "inspire"
        description= _ "This unit can inspire own L0, L1, L2, or L3 units that are next to it, making them fight better. Adjacent own units of L3 will do more 10% more damage; L2 units will do 20% more, L1 will do 30% more, and L0 units will do 40% more."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_1
        value=30
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_2
        value=20
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_3
        value=10
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_INSPIRE_LEVEL_4
    # Canned definition of the Inspire (level 4) ability to be included in an
    # [abilities] clause.
    [leadership]
        id=inspire_0
        value=50
        cumulative=no
        name= _ "inspire"
        description= _ "This unit can inspire own L0, L1, L2, L3, and L4 units that are next to it, making them fight better. Adjacent own units of Level 4 will fight with 10% more damage, L3 will do more 20% more damage; L2 units will do 30% more, L1 will do 40% more, and L0 units will do 50% more."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_1
        value=40
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_2
        value=30
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_3
        value=20
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_4
        value=10
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=4
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_INSPIRE_LEVEL_5
    # Canned definition of the Inspire (level 5) ability to be included in an
    # [abilities] clause.
    [leadership]
        id=inspire_0
        value=60
        cumulative=no
        name= _ "inspire"
        description= _ "This unit can inspire own L0, L1, L2, L3,L4 and L5 units that are next to it, making them fight better. Adjacent own units of Level 4 will fight with 10% more damage, L3 will do more 20% more damage; L2 units will do 30% more, L1 will do 40% more, and L0 units will do 50% more."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_1
        value=50
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_2
        value=40
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_3
        value=30
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_4
        value=20
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=4
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_5
        value=10
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=5
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_CIRCLE_OF_RESISTANCE  
   [resistance]       
	id=ROLcircle        
	add=20        
	max_value=80        
	apply_to=fire,cold,arcane       
	name= _ "circle of resistance"       
	description= _ "This unit and all adjacent friendly units receive a +20% bonus to fire, cold, and arcane resistances."        
	affect_self=yes        
	affect_allies=yes        
	[affect_adjacent]            
	   adjacent=n,ne,se,s,sw,nw        
	[/affect_adjacent]    
   [/resistance]
#enddef

#define SPECIAL_NOTES_CIRCLE_OF_RESISTANCE
_ " This unit maintains a magical aura that bestows a +20% bonus to fire, cold, and arcane resistances to himself and all adjacent friendly units."#enddef

#define ABILITY_IMMUNE_TO_SLOW
    [dummy]
        id="ROLresistant to slow"
        name= ""
        description= ""
    [/dummy]
#enddef

#define SLOWIMMUNITY_EVENTS
  [event]
      name=attack end
      first_time_only=no
     [filter_attack]
         special=slow
     [/filter_attack]
     [filter_second]
         ability="ROLresistant to slow"
     [/filter_second]
	{CLEAR_VARIABLE second_unit.status.slowed}
         [unstore_unit]
		variable=second_unit
		find_vacant=no
	[/unstore_unit]
  [/event]
  [event]
      name=attack end
      first_time_only=no
     [filter_second_attack]
         special=slow
     [/filter_second_attack]
     [filter]
         ability="ROLresistant to slow"
     [/filter]
	{CLEAR_VARIABLE unit.status.slowed}
         [unstore_unit]
		variable=unit
		find_vacant=no
	[/unstore_unit]
  [/event]
  #enddef